{
    "$schema": "./schema.json",
    "languages": [
        {
            "alias": "C#",
            "extension": "cs",
            "requireNamespace": true,
            "templates": [
                {
                    "alias": "Class",
                    "description": "A simple class file",
                    "fileName": "Class",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   $0",
                        "}"
                    ]
                },
                {
                    "alias": "Enum",
                    "description": "A simple enum file",
                    "fileName": "Enum",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public enum ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   Value1,",
                        "   Value2,",
                        "   Value3",
                        "}"
                    ]
                },
                {
                    "alias": "Interface",
                    "description": "A simple interface file",
                    "fileName": "Interface",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public interface ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   void Method();",
                        "}"
                    ]
                },
                {
                    "alias": "Record",
                    "description": "A simple record file (C# 9+)",
                    "fileName": "Record",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public record ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}(string Name, int Age);"
                    ]
                },
                {
                    "alias": "Struct",
                    "description": "A simple struct file",
                    "fileName": "Struct",
                    "snippet": [
                        "namespace [namespace];",
                        "",
                        "public struct ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   public int Id { get; set; }",
                        "   public string Name { get; set; }",
                        "}"
                    ]
                },
                {
                    "alias": "XUnitTest",
                    "description": "A simple xUnit test class",
                    "fileName": "XUnitTest",
                    "snippet": [
                        "using Xunit;",
                        "",
                        "namespace [namespace];",
                        "",
                        "public class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/}",
                        "{",
                        "   [Fact]",
                        "   public void TestMethod()",
                        "   {",
                        "       // Arrange",
                        "       ",
                        "       // Act",
                        "       ",
                        "       // Assert",
                        "       Assert.True(true);",
                        "   }",
                        "}"
                    ]
                },
                {
                    "alias": "Global Usings",
                    "description": "All your global usings must be placed here",
                    "fileName": "GlobalUsings",
                    "snippet": [
                        "// GlobalUsings.cs",
                        "global using static System.Console;",
                        "",
                        "// Microsoft Extensions",
                        "// global using Microsoft.Extensions.DependencyInjection;",
                        "// global using Microsoft.Extensions.Logging;",
                        "// global using Microsoft.Extensions.Options;",
                        "",
                        "// Entity Framework Core (if using EF Core)",
                        "// global using Microsoft.EntityFrameworkCore;",
                        "// global using Microsoft.EntityFrameworkCore.Metadata.Builders;",
                        "",
                        "// JSON & Serialization",
                        "// global using System.Text.Json;",
                        "// global using System.Text.Json.Serialization;",
                        "",
                        "// Reflection",
                        "// global using System.Reflection;",
                        "",
                        "// Database Access",
                        "// global using Microsoft.Data.SqlClient;",
                        "// global using System.Data;",
                        "// global using Npgsql; // PostgreSQL",
                        "// global using MySql.Data.MySqlClient; // MySQL",
                        "// global using MongoDB.Driver; // MongoDB",
                        "",
                        "// Testing",
                        "// global using Xunit;",
                        "// global using NUnit.Framework;",
                        "// global using Microsoft.VisualStudio.TestTools.UnitTesting;",
                        "// global using Moq;",
                        "// global using FluentAssertions;",
                        ""
                    ]
                }
            ]
        },
        {
            "alias": "TypeScript",
            "extension": "ts",
            "requireNamespace": false,
            "templates": [
                {
                    "alias": "class",
                    "description": "A simple Class",
                    "fileName": "class",
                    "snippet": [
                        "class ${TM_FILENAME_BASE/^(.)(.*)/${1:/upcase}${2}/} {",
                        "\t$0",
                        "}"
                    ]
                }
            ]
        },
        {
            "alias": "Python",
            "extension": "py",
            "requireNamespace": false,
            "templates": [
                {
                    "alias": "script",
                    "description": "Simple hello world script",
                    "fileName": "script",
                    "snippet": ["print(\"Hello world\")"]
                },
                {
                    "alias": "requirements",
                    "description": "Save all your dependencies here",
                    "extensionOverride": "txt",
                    "fileName": "requirements",
                    "snippet": ["pytorch"]
                }
            ]
        }
    ]
}
